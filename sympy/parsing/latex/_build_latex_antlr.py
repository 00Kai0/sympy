import os
import subprocess
import glob

here = os.path.dirname(__file__)
dir_latex_antlr = os.path.join(here, "_antlr")

grammar_file = os.path.join(dir_latex_antlr, "..", "LaTeX.g4")

generated_files = sorted(glob.glob(os.path.join(dir_latex_antlr, "*.*")))


def check_antlr_version():
    print("Checking antlr4 version...")

    try:
        print(subprocess.check_output(["antlr4"])
              .decode('utf-8').split("\n")[0])
        return True
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("The antlr4 command line tool is not installed, "
              "or not on your PATH\n"
              "> Please install it via your preferred package manager")
        return False


def build_parser():
    check_antlr_version()

    header = (
        "# AUTO-GENERATED BY `setup.py antlr`, DO NOT EDIT BY HAND\n"
    )

    if not os.path.exists(dir_latex_antlr):
        os.makedirs(dir_latex_antlr)

    with open(os.path.join(dir_latex_antlr, "__init__.py"), "w+") as fp:
        fp.write(header)

    args = [
        "antlr4",
        grammar_file,
        "-o", dir_latex_antlr,
        # for now, not generating these as latex2sympy did not use them
        "-no-visitor",
        "-no-listener",
    ]

    print("Running code generation", "\n\t$", " ".join(args))
    subprocess.check_output(args, cwd=dir_latex_antlr)

    print("Applying headers and renaming")
    for path in glob.glob(os.path.join(dir_latex_antlr, "LaTeX*.*")):
        offset = 0
        new_path = os.path.join(dir_latex_antlr,
                                os.path.basename(path).lower())
        with open(new_path, "w+") as out_file:
            if path.endswith(".py"):
                out_file.write(header)
                offset = 2
            with open(path) as in_file:
                out_file.writelines(in_file.readlines()[offset:])
        os.unlink(path)
        print("...", new_path)

    return True


if __name__ == "__main__":
    build_parser()
