"""
The contents of this file are the return value of
``sympy.assumptions.ask.compute_known_facts``.  Do NOT manually
edit this file.  Instead, run ./bin/ask_update.py.
"""

from sympy.logic.boolalg import And, Not, Or
from sympy.assumptions.ask import Q

# -{ Known facts in CNF }-
known_facts_cnf = And(
    Or(Q.invertible, Q.singular),
    Or(Not(Q.rational), Q.algebraic),
    Or(Not(Q.imaginary), Q.antihermitian),
    Or(Not(Q.algebraic), Q.complex),
    Or(Not(Q.imaginary), Q.complex),
    Or(Not(Q.real), Q.complex),
    Or(Not(Q.real_elements), Q.complex_elements),
    Or(Not(Q.zero), Q.even),
    Or(Not(Q.infinity), Q.extended_real),
    Or(Not(Q.real), Q.extended_real),
    Or(Not(Q.invertible), Q.fullrank),
    Or(Not(Q.real), Q.hermitian),
    Or(Not(Q.even), Q.integer),
    Or(Not(Q.odd), Q.integer),
    Or(Not(Q.prime), Q.integer),
    Or(Not(Q.positive_definite), Q.invertible),
    Or(Not(Q.unitary), Q.invertible),
    Or(Not(Q.diagonal), Q.lower_triangular),
    Or(Not(Q.negative), Q.nonzero),
    Or(Not(Q.positive), Q.nonzero),
    Or(Not(Q.diagonal), Q.normal),
    Or(Not(Q.unitary), Q.normal),
    Or(Not(Q.prime), Q.positive),
    Or(Not(Q.orthogonal), Q.positive_definite),
    Or(Not(Q.integer), Q.rational),
    Or(Not(Q.irrational), Q.real),
    Or(Not(Q.nonnegative), Q.real),
    Or(Not(Q.nonpositive), Q.real),
    Or(Not(Q.nonzero), Q.real),
    Or(Not(Q.rational), Q.real),
    Or(Not(Q.zero), Q.real),
    Or(Not(Q.integer_elements), Q.real_elements),
    Or(Not(Q.invertible), Q.square),
    Or(Not(Q.normal), Q.square),
    Or(Not(Q.symmetric), Q.square),
    Or(Not(Q.diagonal), Q.symmetric),
    Or(Not(Q.lower_triangular), Q.triangular),
    Or(Not(Q.unit_triangular), Q.triangular),
    Or(Not(Q.upper_triangular), Q.triangular),
    Or(Not(Q.orthogonal), Q.unitary),
    Or(Not(Q.diagonal), Q.upper_triangular),
    Or(Not(Q.antihermitian), Not(Q.hermitian)),
    Or(Not(Q.composite), Not(Q.prime)),
    Or(Not(Q.even), Not(Q.odd)),
    Or(Not(Q.imaginary), Not(Q.real)),
    Or(Not(Q.invertible), Not(Q.singular)),
    Or(Not(Q.irrational), Not(Q.rational)),
    Or(Not(Q.negative), Not(Q.nonnegative)),
    Or(Not(Q.negative), Not(Q.positive)),
    Or(Not(Q.nonpositive), Not(Q.positive)),
    Or(Not(Q.nonzero), Not(Q.zero)),
    Or(Not(Q.integer), Q.even, Q.odd),
    Or(Not(Q.extended_real), Q.infinity, Q.real),
    Or(Not(Q.real), Q.irrational, Q.rational),
    Or(Not(Q.triangular), Q.lower_triangular, Q.upper_triangular),
    Or(Not(Q.real), Q.negative, Q.nonnegative),
    Or(Not(Q.nonzero), Q.negative, Q.positive),
    Or(Not(Q.real), Q.nonpositive, Q.positive),
    Or(Not(Q.real), Q.nonzero, Q.zero),
    Or(Not(Q.lower_triangular), Not(Q.upper_triangular), Q.diagonal),
    Or(Not(Q.fullrank), Not(Q.square), Q.invertible),
    Or(Not(Q.real), Not(Q.unitary), Q.orthogonal),
    Or(Not(Q.integer), Not(Q.positive), Q.composite, Q.prime)
)

# -{ Known facts in compressed sets }-
known_facts_dict = {
    Q.algebraic: {Q.complex, Q.algebraic},
    Q.antihermitian: {Q.antihermitian},
    Q.bounded: {Q.bounded},
    Q.commutative: {Q.commutative},
    Q.complex: {Q.complex},
    Q.complex_elements: {Q.complex_elements},
    Q.composite: {Q.composite},
    Q.diagonal: {Q.symmetric, Q.square, Q.triangular, Q.diagonal,
        Q.normal, Q.upper_triangular, Q.lower_triangular},
    Q.even: {Q.even, Q.extended_real, Q.rational, Q.hermitian, Q.complex,
        Q.real, Q.algebraic, Q.integer},
    Q.extended_real: {Q.extended_real},
    Q.fullrank: {Q.fullrank},
    Q.hermitian: {Q.hermitian},
    Q.imaginary: {Q.antihermitian, Q.complex, Q.imaginary},
    Q.infinitesimal: {Q.infinitesimal},
    Q.infinity: {Q.infinity, Q.extended_real},
    Q.integer: {Q.extended_real, Q.rational, Q.hermitian, Q.complex,
        Q.real, Q.algebraic, Q.integer},
    Q.integer_elements: {Q.integer_elements, Q.complex_elements,
        Q.real_elements},
    Q.invertible: {Q.fullrank, Q.invertible, Q.square},
    Q.irrational: {Q.nonzero, Q.extended_real, Q.hermitian, Q.complex,
        Q.irrational, Q.real},
    Q.is_true: {Q.is_true},
    Q.lower_triangular: {Q.triangular, Q.lower_triangular},
    Q.negative: {Q.nonzero, Q.extended_real, Q.negative, Q.hermitian,
        Q.complex, Q.real, Q.nonpositive},
    Q.nonnegative: {Q.extended_real, Q.complex, Q.hermitian,
        Q.nonnegative, Q.real},
    Q.nonpositive: {Q.nonpositive, Q.extended_real, Q.hermitian,
        Q.complex, Q.real},
    Q.nonzero: {Q.extended_real, Q.nonzero, Q.hermitian, Q.complex,
        Q.real},
    Q.normal: {Q.normal, Q.square},
    Q.odd: {Q.nonzero, Q.extended_real, Q.rational, Q.hermitian,
        Q.complex, Q.odd, Q.real, Q.algebraic, Q.integer},
    Q.orthogonal: {Q.fullrank, Q.positive_definite, Q.square, Q.unitary,
        Q.invertible, Q.orthogonal, Q.normal},
    Q.positive: {Q.nonzero, Q.extended_real, Q.hermitian, Q.complex,
        Q.real, Q.positive, Q.nonnegative},
    Q.positive_definite: {Q.fullrank, Q.invertible, Q.square,
        Q.positive_definite},
    Q.prime: {Q.nonzero, Q.extended_real, Q.rational, Q.hermitian,
        Q.complex, Q.real, Q.positive, Q.algebraic, Q.prime,
        Q.nonnegative, Q.integer},
    Q.rational: {Q.extended_real, Q.rational, Q.hermitian, Q.complex,
        Q.real, Q.algebraic},
    Q.real: {Q.extended_real, Q.hermitian, Q.real, Q.complex},
    Q.real_elements: {Q.complex_elements, Q.real_elements},
    Q.singular: {Q.singular},
    Q.square: {Q.square},
    Q.symmetric: {Q.square, Q.symmetric},
    Q.triangular: {Q.triangular},
    Q.unit_triangular: {Q.unit_triangular, Q.triangular},
    Q.unitary: {Q.unitary, Q.fullrank, Q.square, Q.normal, Q.invertible},
    Q.upper_triangular: {Q.upper_triangular, Q.triangular},
    Q.zero: {Q.even, Q.extended_real, Q.rational, Q.hermitian, Q.complex,
        Q.real, Q.algebraic, Q.nonpositive, Q.nonnegative, Q.zero,
        Q.integer},
}
