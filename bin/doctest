#! /usr/bin/env python

"""
Program to execute doctests using the py.test like interface.

The advantage over py.test is that it only depends on sympy and should just
work in any circumstances. See "sympy.dotest?" for documentation.
"""

blacklist = [
        "sympy/thirdparty/pyglet", # segfaults
        "sympy/mpmath", # needs to be fixed upstream
        "sympy/plotting", # generates live plots
        "sympy/utilities/compilef.py", # needs tcc
        "sympy/galgebra/GAsympy.py", # needs numpy
        "sympy/conftest.py", # needs py.test
        "sympy/utilities/benchmarking.py", # needs py.test
        ]

import os
import sys
from optparse import OptionParser

bintest_dir = os.path.abspath(os.path.dirname(__file__))         # bin/test
sympy_top  = os.path.split(bintest_dir)[0]      # ../
sympy_dir  = os.path.join(sympy_top, 'sympy')  # ../sympy/
if os.path.isdir(sympy_dir):
   sys.path.insert(0, sympy_top)
import sympy

parser = OptionParser()
parser.add_option("-v", "--verbose", action="store_true", dest="verbose",
        default=False)

options, args = parser.parse_args()

ok = sympy.doctest(*args, **{"verbose": options.verbose,
    "blacklist": blacklist})
if ok:
    sys.exit(0)
else:
    sys.exit(1)
